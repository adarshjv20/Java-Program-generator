1 = exp::=exp\" + \"exp|exp\" - \"exp|exp\" * \"exp|\"(\"exp\")\"|num|var
2 = num::=regex[1-9][0-9]+
3 = var::=regex[a-zA-Z][a-zA-Z0-9_]+
4 = class_declaration::=modifier\" \" \"class\" \"class_name\" \"class_extension\" \"class_implementation\" \"{\"\n\"body_declaration\"\n}\"
5 = modifier::=\"public\"| \"private\"| \"protected\"| \"static\"| \"final\"
6 = body_declaration::=variable_declaration\"\n\"constructor_declaration\"\n\"method_declaration\"
7 = identifier::=regex[a-zA-Z][a-zA-Z0-9_]+
8 = method_declaration::=modifier\" \"typeSpec\" \"identifier\"method_param_list\" \"{\n\"method_statement_block\"\n\"\t\"return_statement\"\n\" \"}\"
9 = typeSpec::=\"int\"| \"float\"| \"double\"| \"long\"| \"byte\"| \"char\"| \"short\"| \"class_name\"| \"interface_name\"
10 = class_name::=identifier\"
11 = interface_name::=identifier\"
12 = variable_declaration::=modifier\" \"typeSpec\" \"variable_Declarator\";\"
13 = constructor_declaration::=constructor_modifier\" \"const_name\"class_param_list\"{\n\"constructor_statement_block\"\n }\"
14 = static_initializer::=identifier\"
15 = variable_Declarator::=identifier\" \"var_Initializer\"
16 = var_Initializer::=\"=\" \"identifier\"| \"\"
17 = class_extension::=\"extends\" \"class_name\"
18 = class_implementation::=\"implements\" \"interface_name\"
19 = method_statement_block::=\"\t\"variable_declaration\"\n\"\t\"condition_block\"\n\"
20 = method_param_list::=\"(\"typeSpec\" \"identifier\",\"typeSpec\" \"identifier\",\"typeSpec\" \"identifier\")\"
21 = class_param_list::=\"(\")\"
22 = return_statement::=\"return\" \"identifier\";\"
23 = condition_block::=if_statement\"|while_statement\"|do_statement\"|try_statement\"
24 = if_statement::=\"if\"(\"testing_expression\")\"{\"\n\"\t\" \"general_statement\"\n\"\t\"}\"\n\"\t\"else\" \"if\"(\"testing_expression\")\"{\"\n\"\t\" \"general_statement\"\n\"\t\"}\"\n\"\t\"else\"{\"\n\"\t\" \"general_statement\"\n\"\t\"}\"
25 = constructor_statement_block::=\"\t\"variable_declaration\"
26 = while_statement::=\"while\"(\"testing_expression\")\"{\"\n\"\t\" \"exp\"\n\"\t\"}\"
27 = do_statement::=\"do\"{\n\"\t\" \"exp\"\n\"\t\"}\"while\"(\"testing_expression\")\";\"
28 = testing_expression::=identifier\" \"conditions\" \"identifier\"
29 = conditions::=\">\"| \"<\"| \">=\"| \"<=\"| \"==\"| \"!=\"
30 = try_statement::=\"try\"{\n\"\t\" \"general_statement\"\n\"\t\"}\"catch\"catch_parameter\"{\"\n\"\t\"\t\"general_statement\"\n\"\t\"}\"finally\"{\"\n\"\t\"\t\"general_statement\"\n\"\t\"}\"
31 = general_statement::=identifier\";\"
32 = catch_parameter::=\"(\")\"
33 = constructor_modifier::=\"public\"| \"private\"| \"protected\"
34 = const_name::=identifier
